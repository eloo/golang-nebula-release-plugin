import com.github.blindpirate.gogradle.Go
plugins {
    id 'com.github.blindpirate.gogradle' version '0.7.0'
   	id 'nebula.release' version '6.1.0'
}

def outputLocation = './bin/${PROJECT_NAME}_v' + version +'_${GOOS}_${GOARCH}${GOEXE}'
def path = 'github.com/eloo/golang-nebula-release-plugin'

def setVersionFlag='-ldflags "-X main.version=' + version + '"'
def goFlags = setVersionFlag

golang {
    packagePath = "$path"
}

goBuild {
	targetPlatform = ['windows-amd64', 'linux-386', 'darwin-amd64']
    go "build $goFlags -o ./$outputLocation $path"
}

// You should make sure golint is in your $PATH
task build(type: Go){
	println "build $goFlags -o ./$outputLocation $path"
    go "build $goFlags -o ./$outputLocation $path"
}

dependencies {
    golang {
    }
}

//
// Versioning
//
task updateVersionFile(){
	doLast{
		println "Update version.properties"
		Properties props = new Properties()
		File propsFile = new File('version.properties')
		props.load(propsFile.newDataInputStream())
		props.setProperty('version', version.toString())
		props.store(propsFile.newWriter(), null)
	}
}

task commitVersionFile(){
	dependsOn updateVersionFile
	doLast{
		println "Commit version.properties"
		def grgit = org.ajoberstar.grgit.Grgit.open(dir: '.')
		grgit.add(patterns: ['version.properties'])
		grgit.commit(message: 'Bump version [ci skip]')
	}
}

tasks.goBuild.dependsOn updateVersionFile
tasks.finalSetup.finalizedBy commitVersionFile
tasks.candidateSetup.finalizedBy commitVersionFile

// Dummy task for travisci
task assemble{}